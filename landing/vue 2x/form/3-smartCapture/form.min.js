Vue.component("input-sura_written",{props:["pType","pPlaceholder","pName","pRequired","pLimit","icons","verifying"],data:function(){return{type:this.pType||"text",value:"",placeholder:this.pPlaceholder||"",name:this.pName||"",required:this.pRequired||!1,limit:{isLimited:!1,length:0},state:{length:0,isFocused:!1,isEmpty:!0,isError:!1,errorMessage:""},condition:{pattern:/^[a-zA-Z\s]+$/,isCondition:!0,conditionMesaage:"",timeOut:setTimeout}}},beforeMount:function(){switch(this.pLimit&&(this.limit.isLimited=!0,this.limit.length=this.pLimit),this.type){case"text":this.condition.pattern=/^[a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ð ,.'-]+$/u,this.condition.conditionMesaage="Solo se permiten letras";break;case"number":this.condition.pattern=/^[0-9\s]+$/,this.condition.conditionMesaage="Solo se permiten números";break;case"email":this.condition.pattern=/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,this.condition.conditionMesaage="Por favor escriba un correo electrónico válido";break;case"DNI":this.condition.pattern=/^[0-9]{8}[TRWAGMYFPDXBNJZSQVHLCKE]$/i,this.condition.conditionMesaage="Por favor escriba un DNI válido";break;default:this.condition.pattern=/^[a-zA-Z\s]+$/,this.condition.conditionMesaage="Solo se permiten letras"}},methods:{doThis:function(val){this.validateLength(val,this.validateType)},validateLength:function(val,callback){if(this.state.length=val.length,0==this.state.length)return this.state.isEmpty=!0,this.state.isError=!1,this.state.errorMessage="",void clearTimeout(this.condition.timeOut);if(this.state.isEmpty=!1,this.limit.isLimited){if(this.state.length>this.limit.length)return this.state.isError=!0,void(this.state.errorMessage="¡Demasiados caracteres!");this.state.isError=!1,this.state.errorMessage=""}callback(val)},validateType:function(value){switch(this.type){case"email":clearTimeout(this.condition.timeOut),this.condition.timeOut=setTimeout(()=>{value.toLowerCase().match(this.condition.pattern)?(this.state.isError=!1,this.state.errorMessage=""):(this.state.isError=!0,this.state.errorMessage=this.condition.conditionMesaage)},1400);break;default:this.condition.pattern.test(value)?(this.state.isError=!1,this.state.errorMessage=""):(this.state.isError=!0,this.state.errorMessage=this.condition.conditionMesaage)}},sendStatus:function(val){let state={type:"input",isEmpty:this.state.isEmpty,isError:this.state.isError,isRequired:this.required,name:this.name,value:this.value};this.$emit("status",state)}},computed:{classInput:function(){return{"input-error":this.state.isError}}},watch:{value:function(){this.doThis(this.value)},verifying:function(){this.verifying&&this.sendStatus(this.verifying)}},template:'\n\t<div class="form-input_container">\n\t\t<transition name="slide-fade">\n\t\t\t<div v-show="!state.isEmpty" class="form-input_description">\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{{ placeholder }}\n\t\t\t\t\t\t<span v-if="required">*</span>\n\t\t\t\t\t\t<span v-else> (opcional)</span>\n\t\t\t\t\t</span>\n\t\t\t</div>\n\t\t</transition>\n    <div class="form-input_control">\n      <input v-model="value" v-bind:class="classInput" type="text" :name="name" class="form-input--sura" :required="required" :placeholder="placeholder">\n\t\t\t<div class="input-container-icon--md">\n\t\t\t\t<transition name="slide-fade">\n\t\t\t\t\t<div class="icon-svg--error" v-show="state.isError">\n\t\t\t\t\t\t<img :src="this.icons.error" alt="icon of error">\n\t\t\t\t\t</div>\n\t\t\t\t</transition>\n\t\t\t</div>\n    </div>\n    <div class="form-input_auxiliary">\n\t\t\t<div class="row">\n\t\t\t\t<div class="col-10">\n\t\t\t\t\t<transition-group name="slide-fade">\n\t\t\t\t\t\t<span style="position:absolute;" :key="1" v-show="required && !state.isError && state.isEmpty">\n\t\t\t\t\t\t\tRequerido*\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span style="position:absolute;" :key="2" v-show="!required && !state.isError && state.isEmpty">\n\t\t\t\t\t\t\tOpcional\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span style="position:absolute;" :key="3" v-show="!state.isEmpty && !state.isError">\n\t\t\t\t\t\t\t{{ condition.conditionMesaage }}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span :key="4" class="input_auxiliary--error" v-show="state.isError">\n\t\t\t\t\t\t\t{{ state.errorMessage }}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</transition-group>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t\t<div v-if="this.limit.isLimited" class="col-2 text-end">\n\t\t\t\t\t{{ this.state.length }}/{{ this.limit.length }}\n\t\t\t\t</div>\n\t\t\t</div>\n    </div>\n  </div>'}),Vue.component("input-sura_checkbox",{props:["pValue","pName","pRequired","label","verifying"],data:function(){return{value:this.pValue||"",name:this.pName||"",required:this.pRequired||!1,state:{isEmpty:!0}}},methods:{sendStatus:function(val){let state={type:"radio",isEmpty:this.state.isEmpty,isError:!1,isRequired:this.required,name:this.name,value:this.state.isEmpty?"":this.value};this.$emit("status",state)},doThis:function(){this.state.isEmpty=!this.state.isEmpty}},watch:{verifying:function(){this.verifying&&this.sendStatus(this.verifying)}},template:'\n\t\t<div class="form-input_container--wlh">\n\t\t\t<label @click="doThis" class="input_label_custom"><slot name="label"></slot>\n\t\t\t\t<input type="checkbox" :name="name" class="form-checkbox--sura" required="required" :value="value">\n\t\t\t\t<span class="checkmark--checkbox"></span>\n\t\t\t</label>\n\t\t</div>'}),Vue.component("input-sura_radio",{props:["pValue","pName","pRequired","label","verifying"],data:function(){return{value:this.pValue||"",name:this.pName||"",required:this.pRequired||!1,state:{isEmpty:!0}}},methods:{sendStatus:function(val){let state={type:"radio",isEmpty:this.state.isEmpty,isError:!1,isRequired:this.required,name:this.name,value:this.state.isEmpty?"":this.value};this.$emit("status",state)},doThis:function(){this.state.isEmpty=!1}},watch:{verifying:function(){this.verifying&&this.sendStatus(this.verifying)}},template:'\n\t\t<div class="form-input_container--wlh">\n\t\t\t<label @click="doThis" class="input_label_custom"><slot name="label"></slot>\n\t\t\t\t<input type="radio" :name="name" class="form-checkbox--sura" required="required" :value="value">\n\t\t\t\t<span class="checkmark--radio"></span>\n\t\t\t</label>\n\t\t</div>'}),Vue.component("input-sura_select",{props:{pPlaceholder:{type:String,default:"Seleccione una opción"},pName:{type:String,default:"seleccionMultiple"},pRequired:{type:Boolean,default:!1},icons:{default:()=>({error:"",arrow:""})},pSearch:{type:Boolean,default:!1},items:{type:Array,default:function(){return[{value:1,text:"Item 1"},{value:2,text:"Item 2"},{value:3,text:"Item 3"}]}},verifying:{type:Boolean,default:!1}},data:function(){return{placeholder:this.pPlaceholder,name:this.pName,required:this.pRequired,search:this.pSearch,fieldSearch:!1,options:{origin:this.items,filter:[],selected:{value:"",text:""}},state:{isSelected:!1,isFocused:!1,isUnder:!1,isError:!1,errorMessage:""}}},beforeMount:function(){this.options.filter=this.options.origin||[],this.options.selected.text=this.placeholder},methods:{doThis:function(){this.state.isUnder=!this.state.isUnder},selectOption:function(event){this.options.selected.value=event.target.attributes.value.value,this.options.selected.text=event.target.innerText,this.state.isUnder=!1,this.state.isSelected=!0},loseFocus:function(){this.state.isUnder=!1},sendStatus:function(val){let state={type:"select",isEmpty:!this.state.isSelected,isError:this.state.isError,isRequired:this.required,name:this.name,value:this.options.selected.value};this.$emit("status",state)}},computed:{classInput:function(){return{"input-error":this.state.isError,"focus-select":this.state.isUnder}},classIconArrowSelect:function(){return{"arrow-actived-select":this.state.isUnder}}},watch:{search:function(){this.options.filter=this.options.origin.filter(item=>{const decomposed=item.text.toLowerCase().normalize("NFD").replace(/[\u0300-\u036f]/g,"");return decomposed.indexOf(this.search.toLowerCase())>-1}).sort((a,b)=>a.text.localeCompare(b.text))},verifying:function(){this.verifying&&this.sendStatus(this.verifying)}},template:'\n\t<div class="form-input_container">\n\t\t<transition name="slide-fade">\n\t\t\t<div v-show="state.isUnder || state.isSelected" class="form-input_description">\n\t\t\t\t<span>\n\t\t\t\t\t{{ placeholder }}\n\t\t\t\t\t<span v-if="required">*</span>\n\t\t\t\t\t<span v-else> (opcional)</span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t</transition>\n    <div class="form-input_control zl-3" v-on:mouseleave="loseFocus">\n\t\t\t<div @click="doThis" v-bind:class="classInput" class="form-select--sura">\n\t\t\t  {{ options.selected.text }}\n\t\t\t</div>\n\t\t\t<div class="input-container-icon--xs">\n\t\t\t\t<transition name="slide-fade">\n\t\t\t\t\t<div class="icon-svg--error" v-bind:class="classIconArrowSelect">\n\t\t\t\t\t\t<img :src="this.icons.arrow" alt="icon arrow" @click="doThis" style="cursor: pointer;">\n\t\t\t\t\t</div>\n\t\t\t\t</transition>\n\t\t\t</div>\n\t\t\t<transition name="slide-fade-down">\n\t\t\t\t<div v-show="state.isUnder" class="input-container-items">\n\t\t\t\t\t\x3c!-- input filter --\x3e\n\t\t\t\t\t<div v-if="fieldSearch" class="input-container-filter">\n\t\t\t\t\t\t<input v-model="search" type="text" class="input-filter" placeholder="Buscar...">\n\t\t\t\t\t</div>\n\t\t\t\t\t<ul class="container-options">\n\t\t\t\t\t\t<li v-for="item in options.filter" :value="item.value" class="select-option" @click="selectOption">\n\t\t\t\t\t\t\t{{ item.text }}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</ul>\n\t\t\t\t</div>\n\t\t\t</transition>\n\t\t\t<input type="hidden" :name="name" :value="options.selected.value">\n    </div>\n    <div class="form-input_auxiliary">\n\t\t\t<div class="row">\n\t\t\t\t<div class="col-10">\n\t\t\t\t\t<transition-group name="slide-fade">\n\t\t\t\t\t\t<span style="position:absolute;" :key="1" v-show="required && !state.isError && !state.isUnder && !state.isSelected">\n\t\t\t\t\t\t\tRequerido*\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span style="position:absolute;" :key="2" v-show="!required && !state.isError && !state.isUnder && !state.isSelected">\n\t\t\t\t\t\t\tOpcional\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<span :key="4" class="input_auxiliary--error" v-show="state.isError">\n\t\t\t\t\t\t\t{{ state.errorMessage }}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</transition-group>\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</div>\n    </div>\n  </div>'});